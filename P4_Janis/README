/***************************************************************/
/* Author: Daniel Janis                                         /
/  Course: CS 4280                                              /
/  File: README.txt                                             /
/  Last Edit: 4/30/2020                                        */
/***************************************************************/

I am using option 3 (FSA table + driver)

The FSA table is declared in the file:
	--> table.cpp

The driver() function is contained in the file:
	--> driver.cpp

The SEMANTICS checking is done within the file 
	--> tree.cpp <-- in the function
	--> prettyPrint()

The compilation into .asm is done using codeGeneration.cpp

/**************************************************************/
/* MAKEFILE */

The makefile for this program (comp) is titled makefile.
This makefile can be ran by typing the command:
        > "make"

If the program has been made already (.o files and comp* exists),
the following command will clean those files:
        > "make clean"

/**************************************************************/
/* RUNNING THE PROGRAM */

To run the program, you must first use the "make" command above.
Once the makefile does its magic you can run this program with
any of the following methods (type whats in the double quotes):

 > "comp [file]"
                                (where file is an optional argument, the file
                                 extension can be left off with this call)

 > "comp"
                        (If file was not provided, the program scans
                         data from the keyboard as a device)

 > "comp < [file]"
                                (redirects input from the file instead of the
                                 keyboard, the file extension is required for
                                 this call to run successfully)

Delete output files as necessary using the "rm [file]" command.

/*****************************************************************/
TEST FILES: 

/* Received these tests from John */

basicExpr.sp2020
basicGoto.sp2020
basicInOut.sp2020
basicLoop.sp2020
basicRO.sp2020
compExpr.sp2020
compIffy.sp2020
compLoop.sp2020
iffyLoop.sp2020

/* Received this test from Jackson */

P4_test12.sp2020

/* These test files were my own from recent projects */
/* ALL of these passed successfully */

P4_test5.sp2020
P4_test6.sp2020
P4_test7.sp2020
P4_test8.sp2020
P4_test9.sp2020
P4_test10.sp2020
P4_test11.sp20i20
P4_test12.sp2020
P4_test13.sp2020

/* SCANNER error */
P4_test3.sp2020

/*****************************************************************/

Comments:
> For "comp < [file]", the standard input is being read in from
  the [file] that was passed to this program using bash (MUST have the extension to work)

> The prompt "Please enter alphanumerical strings..."
  can be ignored if the above invocation method was used

> If you try the invokation using "comp < [file]" and the file does not exist, or
  if the file is saved without adding anything and pressing CTRL+D then you can
  ignore "SCANNER ERROR:
		  Found a character that wasn't in alphabet.
		  (error at line: 1, index: 0)"
